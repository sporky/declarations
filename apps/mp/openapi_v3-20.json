{"openapi":"3.1.0","info":{"title":"Monitor Proxy","description":"Delegated monitors for the F5 BIGIP","version":"3.20"},"paths":{"/api/status/{monitor_name}":{"get":{"tags":["Monitor Status"],"summary":"Get Monitor Status","description":"Finds the previously configured instance we were tasked with tracking.. return what we know.","operationId":"get_monitor_status_api_status__monitor_name__get","parameters":[{"name":"monitor_name","in":"path","required":true,"schema":{"type":"string","title":"Monitor Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/status/details/{monitor_name}":{"get":{"tags":["Monitor Status"],"summary":"Get Details About Monitor","description":"If you want some additional details about how a named monitor","operationId":"get_details_about_monitor_api_status_details__monitor_name__get","parameters":[{"name":"monitor_name","in":"path","required":true,"schema":{"type":"string","title":"Monitor Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/status/about/me":{"get":{"tags":["Monitor Status"],"summary":"Get Runtime Info","description":"Keep all the runtime counts in the AboutMe thing so we can report","operationId":"get_runtime_info_api_status_about_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AboutMe"}}}}}}},"/api/config/{monitor_name}":{"delete":{"tags":["Monitor Configs"],"summary":"Delete A Monitor","description":"Delete a previously configured monitor.","operationId":"delete_a_monitor_api_config__monitor_name__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"monitor_name","in":"path","required":true,"schema":{"type":"string","title":"Monitor Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/config/show":{"get":{"tags":["Monitor Configs"],"summary":"Show Monitor Configs","description":"returns a list of currently configured monitors.  If you squirrel this away for later, it can be POSTed back to restore the configuration as it stands","operationId":"show_monitor_configs_api_config_show_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/config/show/{monitor_name}":{"get":{"tags":["Monitor Configs"],"summary":"Show Specific Monitor Config","description":"returns a list of monitors matching the monitor_name parameter.  If the name provided exists within the name of a configured monitor, it will be returned","operationId":"show_specific_monitor_config_api_config_show__monitor_name__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"monitor_name","in":"path","required":true,"schema":{"type":"string","title":"Monitor Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/config/monitors":{"post":{"tags":["Monitor Configs"],"summary":"Build Many Monitors","description":"Build one or many monitors with a single POST.  Monitor configurations added via POST will be ADDED to list of previously configured monitors.\n\nRequest body should have the shape of {\"monitors\": [moncfg1, moncfg2, etc]}.  moncfgs are dictionaries with the following info:  See schema below for full details.\n\n- **name**: each monitor must have a unique name\n- **description**: describe this monitor until it hurts\n- **monitor_type**: for now, it should always be 'postgres'\n- **ipaddr**: either IP or FQDN for the object to be monitored\n- **ipport**: tcp port of the monitored service\n- **username**: username that monitored service will respect\n- **password**: password that monitored service will respect\n- **txstr**: question to be asked of monitored service\n- **rxstr**: expected answer from previous question.  Use 't' or 'f' for True/False if a boolean response is expected","operationId":"build_many_monitors_api_config_monitors_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MonitorConfigs"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/user/token":{"post":{"tags":["User"],"summary":"Login For Access Token","operationId":"login_for_access_token_api_user_token_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_for_access_token_api_user_token_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/user/me":{"get":{"tags":["User"],"summary":"Read Users Me","operationId":"read_users_me_api_user_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"patch":{"tags":["User"],"summary":"Change Local Password","operationId":"change_local_password_api_user_me_patch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordChange"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/export":{"get":{"tags":["System Configuration"],"summary":"Export Entire Config","operationId":"export_entire_config_api_syscfg_export_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemCfg-Output"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/import":{"post":{"tags":["System Configuration"],"summary":"Import Entire Config","operationId":"import_entire_config_api_syscfg_import_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemCfg-Input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/save":{"get":{"tags":["System Configuration"],"summary":"Persist Current Cfg","description":"write the current set of configured monitors to disk.  This will normally happen automatically, but it's here if you want it.","operationId":"persist_current_cfg_api_syscfg_save_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/load":{"get":{"tags":["System Configuration"],"summary":"Reload Config From Last Save","description":"load the saved config from disk.  Will replace all currently configured monitors.  This happens automatically, but just in case.","operationId":"reload_config_from_last_save_api_syscfg_load_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"factory_default","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Factory Default"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/syscfg/ldap":{"get":{"tags":["System Configuration"],"summary":"Show Ldap Config","description":"This works as expected","operationId":"show_ldap_config_api_syscfg_ldap_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LDAPCfg-Output"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["System Configuration"],"summary":"Update Ldap Config","description":"There are a few global LDAP attributes and then as many ldap servers as you care to include.\n- **domainname**: Your AD domain.  Probably looks something like company.int\n- **groups**: List of groups allow to break, er, modify the config : [\"CN=monproxy,CN=Users,DC=company,DC=int:,:CN=noskillz,CN=Users,DC=company,DC=int\"]\n- **basedn**: Where we should start looking for groups : 'CN=Users,DC=company,DC=int'\n- **servers**: List of LDAPServerCfgs.  You really want two or more configured. See LDAPServerCfg schema for details : [{LDAPServerCfg},{LDAPServerCfg}]","operationId":"update_ldap_config_api_syscfg_ldap_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LDAPCfg-Input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/cluster":{"get":{"tags":["System Configuration"],"summary":"Show Cluster Config","operationId":"show_cluster_config_api_syscfg_cluster_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterCfg-Output"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["System Configuration"],"summary":"Update Cluster Config","description":"update the cluster configuration.  Both devices must have a cluster config to work.\n- **state**: MASTER, BACKUP, or NONE\n- **virtualip**:  Floating IP\n- **password**: Just a little something to keep your float protected. If one is not provided, one will be provided for you.  It is not a good one.","operationId":"update_cluster_config_api_syscfg_cluster_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterCfg-Input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/nginx":{"get":{"tags":["System Configuration"],"summary":"Show Nginx Config","operationId":"show_nginx_config_api_syscfg_nginx_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NGINXcfg-Output"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["System Configuration"],"summary":"Update Nginx Config","description":"update the existing NGINX configuration.  Filenames for public and private keys are currently read only.  Private_key and public_key properties are ignored.\nSo yeah, none of this currently does anything.","operationId":"update_nginx_config_api_syscfg_nginx_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NGINXcfg-Input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/syscfg/docker":{"get":{"tags":["System Configuration"],"summary":"Show Docker Config","operationId":"show_docker_config_api_syscfg_docker_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DockerCfg-Output"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["System Configuration"],"summary":"Update Docker Config","description":"Does not work.  If it did, it would update the existing docker configuration.","operationId":"update_docker_config_api_syscfg_docker_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DockerCfg-Input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/sync/config":{"get":{"tags":["Config Sync"],"summary":"Current Config","operationId":"current_config_api_sync_config_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemCfg-Output"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["Config Sync"],"summary":"Sync Updated Config","description":"post config from peer to this endpoint..","operationId":"sync_updated_config_api_sync_config_post","requestBody":{"content":{"application/json":{"schema":{"type":"object","title":"Config"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Sync Updated Config Api Sync Config Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/sync/version":{"get":{"tags":["Config Sync"],"summary":"Current Version","operationId":"current_version_api_sync_version_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"integer","title":"Response Current Version Api Sync Version Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/sync/start":{"get":{"tags":["Config Sync"],"summary":"Request Sync To Peer","description":"If you want/need to force a sync to peers, this is the way..","operationId":"request_sync_to_peer_api_sync_start_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/sync/monitors":{"get":{"tags":["Config Sync"],"summary":"Internal State Of Monitors","description":"returns the internal state of all configured monitors","operationId":"internal_state_of_monitors_api_sync_monitors_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMsg"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}}},"components":{"schemas":{"AboutMe":{"properties":{"version":{"type":"string","title":"Version","description":"OVA bundle version","default":"0.0"},"container_img":{"type":"string","title":"Container Img","description":"image hash of the current container","default":"unknown"},"active_monitors":{"type":"integer","title":"Active Monitors","description":"number of db's we ARE asking about","default":0},"config_monitors":{"type":"integer","title":"Config Monitors","description":"number of db's we SHOULD be asking about","default":0},"healthchk_requests":{"type":"integer","title":"Healthchk Requests","description":"count of hits to the /api/status/ routes","default":0},"last_poll_complete":{"type":"number","title":"Last Poll Complete","description":"timestamp of when the last periodic poll finished.  Should not exceed 2s, really","default":0.0},"last_poll_duration":{"type":"number","title":"Last Poll Duration","description":"how long did it take to check the last group of monitors","default":0.0},"last_poll_serviced":{"type":"integer","title":"Last Poll Serviced","description":"Number of precious little databases we checked on during the last interval","default":0},"monitor_instance_status_summary":{"type":"object","title":"Monitor Instance Status Summary","description":"summary of the last status of each configured monitor","default":{}}},"type":"object","required":["version","container_img","active_monitors","config_monitors","healthchk_requests","last_poll_complete","last_poll_duration","last_poll_serviced","monitor_instance_status_summary"],"title":"AboutMe"},"Body_login_for_access_token_api_user_token_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"password"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login_for_access_token_api_user_token_post"},"ClusterCfg-Input":{"properties":{"state":{"type":"string","title":"State","description":"Either MASTER or NONE - for a cluster, assign everyone as MASTER and the app will figure it out.  Using BACKUP will be auto-corrected to MASTER","default":"NONE"},"virtualip":{"type":"string","title":"Virtualip","description":"Virtual IP address that floats between cluster members","default":""},"password":{"type":"string","title":"Password","description":"Make one up for yourself, the default one is PASSWORD.  Only the first 8 characters count","default":"PASSWORD"},"priority":{"type":"integer","title":"Priority","description":"dynamically generated based on state","default":0},"local":{"type":"string","title":"Local","description":"address that peer node will use to contact us","default":""},"peer":{"type":"string","title":"Peer","description":"address this node will use to contact peer","default":""}},"type":"object","title":"ClusterCfg"},"ClusterCfg-Output":{"properties":{"state":{"type":"string","title":"State","description":"Either MASTER or NONE - for a cluster, assign everyone as MASTER and the app will figure it out.  Using BACKUP will be auto-corrected to MASTER","default":"NONE"},"virtualip":{"type":"string","title":"Virtualip","description":"Virtual IP address that floats between cluster members","default":""},"password":{"type":"string","title":"Password","description":"Make one up for yourself, the default one is PASSWORD.  Only the first 8 characters count","default":"PASSWORD"},"priority":{"type":"integer","title":"Priority","description":"dynamically generated based on state","default":0},"local":{"type":"string","title":"Local","description":"address that peer node will use to contact us","default":""},"peer":{"type":"string","title":"Peer","description":"address this node will use to contact peer","default":""}},"type":"object","required":["state","virtualip","password","priority","local","peer"],"title":"ClusterCfg"},"DockerCfg-Input":{"properties":{"use_proxy":{"type":"string","title":"Use Proxy","description":"set explicit proxy info here.. whatever that looks like","default":"none"}},"type":"object","title":"DockerCfg"},"DockerCfg-Output":{"properties":{"use_proxy":{"type":"string","title":"Use Proxy","description":"set explicit proxy info here.. whatever that looks like","default":"none"}},"type":"object","required":["use_proxy"],"title":"DockerCfg"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LDAPCfg-Input":{"properties":{"domain":{"type":"string","title":"Domain","description":"Your AD domain, fully qualified: yourcompany.int, maybe","default":""},"basedn":{"type":"string","title":"Basedn","description":"Where we should start looking for groups and such.  For example: 'CN=Users,DN=planetspork,DN=com'","default":""},"groups":{"items":{"type":"string"},"type":"array","title":"Groups","description":"A list of groups allowed to break things.  For example: [ 'CN=monproxy,CN=Users,DC=planetspork,DC=com' ] "},"servers":{"items":{"$ref":"#/components/schemas/LDAPServerCfg-Input"},"type":"array","title":"Servers","description":"A list of LDAPServerCfg so we can validate credentials.  See LDAPServerCfg model for details.  Example:\n        [\n            {\n                \"name\": \"ldapone\",\n                \"ipaddr\": \"pdc.planetspork.com\",\n                \"ipport\": 636,\n                \"use_ssl\": True,\n            }\n        ]"}},"type":"object","title":"LDAPCfg"},"LDAPCfg-Output":{"properties":{"domain":{"type":"string","title":"Domain","description":"Your AD domain, fully qualified: yourcompany.int, maybe","default":""},"basedn":{"type":"string","title":"Basedn","description":"Where we should start looking for groups and such.  For example: 'CN=Users,DN=planetspork,DN=com'","default":""},"groups":{"items":{"type":"string"},"type":"array","title":"Groups","description":"A list of groups allowed to break things.  For example: [ 'CN=monproxy,CN=Users,DC=planetspork,DC=com' ] "},"servers":{"items":{"$ref":"#/components/schemas/LDAPServerCfg-Output"},"type":"array","title":"Servers","description":"A list of LDAPServerCfg so we can validate credentials.  See LDAPServerCfg model for details.  Example:\n        [\n            {\n                \"name\": \"ldapone\",\n                \"ipaddr\": \"pdc.planetspork.com\",\n                \"ipport\": 636,\n                \"use_ssl\": True,\n            }\n        ]"}},"type":"object","required":["domain","basedn","groups","servers"],"title":"LDAPCfg"},"LDAPServerCfg-Input":{"properties":{"name":{"type":"string","title":"Name","description":"Some word(s) meaningful to you.  Just a little something to remember it by.."},"ipaddr":{"type":"string","title":"Ipaddr","description":"IP Address or FQDN of ldap server"},"ipport":{"type":"integer","title":"Ipport","description":"port of LDAP service - typically 389 (unencrypted) or 636 (encrypted)"},"use_ssl":{"type":"boolean","title":"Use Ssl","default":false}},"type":"object","required":["name","ipaddr","ipport"],"title":"LDAPServerCfg"},"LDAPServerCfg-Output":{"properties":{"name":{"type":"string","title":"Name","description":"Some word(s) meaningful to you.  Just a little something to remember it by.."},"ipaddr":{"type":"string","title":"Ipaddr","description":"IP Address or FQDN of ldap server"},"ipport":{"type":"integer","title":"Ipport","description":"port of LDAP service - typically 389 (unencrypted) or 636 (encrypted)"},"use_ssl":{"type":"boolean","title":"Use Ssl","default":false}},"type":"object","required":["name","ipaddr","ipport","use_ssl"],"title":"LDAPServerCfg"},"MonitorCfg-Input":{"properties":{"name":{"type":"string","title":"Name","description":"Name to be referenced by BigIP monitor configuration (https://monproxy.dom.int/api/status/monitor_name)","default":"monitor_name"},"description":{"type":"string","title":"Description","description":"Be creative!  This is your time to shine.  Or put boring stuff in here.. I don't care.","default":"description"},"monitor_type":{"$ref":"#/components/schemas/MonitorTypeEnum"},"ipaddr":{"type":"string","title":"Ipaddr","description":"IP Address or FQDN of db to be monitored","default":"172.31.225.65"},"ipport":{"type":"integer","maximum":65535.0,"minimum":0.0,"title":"Ipport","description":"port where db can be reached","default":15432},"username":{"type":"string","title":"Username","description":"postgres username","default":"postgres"},"password":{"type":"string","title":"Password","description":"postgres password - either clear or encrypted form.  If encrypted, some key material must be part of base cfg","default":"pgpassword"},"database":{"type":"string","title":"Database","description":"name of the database","default":""},"txstr":{"type":"string","title":"Txstr","description":"query for postgres","default":"select pg_is_in_recovery()"},"rxstr":{"type":"string","title":"Rxstr","description":"expected response from postgres. t=True, f=False","default":"f"},"original_pwd":{"type":"string","title":"Original Pwd","default":""}},"type":"object","required":["monitor_type"],"title":"MonitorCfg"},"MonitorCfg-Output":{"properties":{"name":{"type":"string","title":"Name","description":"Name to be referenced by BigIP monitor configuration (https://monproxy.dom.int/api/status/monitor_name)","default":"monitor_name"},"description":{"type":"string","title":"Description","description":"Be creative!  This is your time to shine.  Or put boring stuff in here.. I don't care.","default":"description"},"monitor_type":{"$ref":"#/components/schemas/MonitorTypeEnum"},"ipaddr":{"type":"string","title":"Ipaddr","description":"IP Address or FQDN of db to be monitored","default":"172.31.225.65"},"ipport":{"type":"integer","maximum":65535.0,"minimum":0.0,"title":"Ipport","description":"port where db can be reached","default":15432},"username":{"type":"string","title":"Username","description":"postgres username","default":"postgres"},"password":{"type":"string","title":"Password","description":"postgres password - either clear or encrypted form.  If encrypted, some key material must be part of base cfg","default":"pgpassword"},"database":{"type":"string","title":"Database","description":"name of the database","default":""},"txstr":{"type":"string","title":"Txstr","description":"query for postgres","default":"select pg_is_in_recovery()"},"rxstr":{"type":"string","title":"Rxstr","description":"expected response from postgres. t=True, f=False","default":"f"}},"type":"object","required":["name","description","monitor_type","ipaddr","ipport","username","password","database","txstr","rxstr"],"title":"MonitorCfg"},"MonitorConfigs":{"properties":{"monitors":{"items":{"$ref":"#/components/schemas/MonitorCfg-Input"},"type":"array","title":"Monitors"}},"type":"object","title":"MonitorConfigs"},"MonitorTypeEnum":{"type":"string","enum":["postgres","oracle"],"title":"MonitorTypeEnum"},"NGINXcfg-Input":{"properties":{"private_key":{"type":"string","title":"Private Key","description":"pem encoded private key","default":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCzOQHRxEkI9gtf\n5Snw2GSFqlJ8UFlBo0WCS9ty4Nthz77NW0lYj6WNH+LDEENN+mDzepQ1o4vERmGi\nxm1S5YVA7ulGwFcnlHz62MTkx/muN3/zq/Q0DS8veUoPfl3h66sO9boUlqZE9IHy\nUEPmox6Cav2fwbXJuExoqgcVofPTydJb2mz1TeBLte34KYDQtcm1qGwXQwLwfltB\nR/NpQs7HmhihIg4UmQR8owGrSSN7vEoJk+W7rQkDtYrTJqHBAHBfX3nupQLua1U9\nYLrASJBQ4K+1KLrf5tXganNiwQIwPr1mYijEgpoBbGYYWx32ormji+rn9G37uqnQ\n4rdGRoPFAgMBAAECggEAZEUOqYeBvQu7DWmu71qB0u6Zu4dQiJKKPv2lxz3aP3z1\nKPtbq7qiSrR+L9gXb7cXKuF3rhLUDXm7AlC1tV1IEi4YQUc2+6Pt0IIalkzzee7/\nHRslQ0HlFlBriQOQDufFClecRgyK9aU+Vo1lj9HPLfQh9ZFw3WzJAv2tfQLg4anm\ntR0BfzTDMgSk8uLLpcz+pwEgWG7Ij9dWO5d2B7ZYmobdt+e/CYbFRKCeWGQ8Wake\n6GH8nMs5uK/xLCQFgFLk4lYe6gnB/8/CDUVSNXZcqE3FvV6yDJrYD2jPAKb2air7\nvTyMyqVZK8wqR0N4f2VOGC3UuYcOUb4HHYXWGJ6FeQKBgQDeqnZUo19LIP9Ikuh4\n99ORuXdYKHbr3aDRFOQwZjfTcJ4ltG/fK/leJfGcG9gtpnPW8yF0BA3W6wML0r4f\nj4NUCsbmFixFNZ/DV8DP1YYoZ1yIBUWOhuE9ee1z81V7I0p/GG3y07JA01Q40Qut\n3hQNQ2FHsoCImHpj34KyvcnZUwKBgQDODZxLnzTReLBemhTKERkJqrpY8gdqbwqv\nOiHeajEH/CccDoxZNdv33TGl9Gj7UljotYDjz46d8LFr/wR5SC1h49SgoqoBZNT/\nGfOmFWMdkFNrtg5v+tCyCUmGJg3SiBBeB2gG6nkouzfYsHXMYJIKzZaO4cEzgpVn\nsl0EpEVThwKBgHH89eLSV+BQHh/7BQOYazi4p338CRUqOj+O4FpemcmmZ2+J9ZNc\nIaau6gcuwfZstfSeNsv7n1IcsUyGMEpb37FQaw4y36r2jrkj3VMITku0zkvb1wXl\nyrz8BDFNqr8FDAgQa4jaEvDYvs7vRXlWrRE1I0HfAanr1Qv3yiLSwdh9AoGBAJVZ\njCXL2a7SuZN4PwVPa0R0eOkrVHCy1522lwHtGmjdPUO6z8OBpFR+ARR2mPlA8KyL\nkkaNFKQp54+NoiJ+TFadmmpsPKkR+siEePOyoMq256A0rzY/J7FDxgTz5CTq9mIR\nIDeTEAqT2KC5Fkjy3ifyZ+RcgXridYRZ5c4NeypVAoGAWSOSFGy6e3dZulifepDV\nVheBj8G2qsvxS+QIPoCyaYzfBKmZF4EoAkSXReisGWMB5i3lqquCajNG+hzSB6cg\nOC68cUf5LZpwLt+CKYrtNAzD663+20XmX6iP6Zsl5JlFiuQzPKHPKJYFCUlE5E8D\nSaDau2y2mg095VxcC4mpTGM=\n-----END PRIVATE KEY-----\n"},"public_key":{"type":"string","title":"Public Key","description":"pem encoded public key/full chain","default":"-----BEGIN CERTIFICATE-----\nMIID8zCCAtugAwIBAgIUQIZK8OYPxWGlw45vKIz+PGQ3YngwDQYJKoZIhvcNAQEL\nBQAwgYgxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJXQTEQMA4GA1UEBwwHU2VhdHRs\nZTELMAkGA1UECgwCRjUxEDAOBgNVBAsMB3NvbWVndXkxGzAZBgNVBAMMEm1vbnBy\nb3h5LmxvY2FsaG9zdDEeMBwGCSqGSIb3DQEJARYPYi5pbWhvZmZAZjUuY29tMB4X\nDTIyMTIwOTE5NDUwNFoXDTIzMTIwOTE5NDUwNFowgYgxCzAJBgNVBAYTAlVTMQsw\nCQYDVQQIDAJXQTEQMA4GA1UEBwwHU2VhdHRsZTELMAkGA1UECgwCRjUxEDAOBgNV\nBAsMB3NvbWVndXkxGzAZBgNVBAMMEm1vbnByb3h5LmxvY2FsaG9zdDEeMBwGCSqG\nSIb3DQEJARYPYi5pbWhvZmZAZjUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\nMIIBCgKCAQEAszkB0cRJCPYLX+Up8NhkhapSfFBZQaNFgkvbcuDbYc++zVtJWI+l\njR/iwxBDTfpg83qUNaOLxEZhosZtUuWFQO7pRsBXJ5R8+tjE5Mf5rjd/86v0NA0v\nL3lKD35d4eurDvW6FJamRPSB8lBD5qMegmr9n8G1ybhMaKoHFaHz08nSW9ps9U3g\nS7Xt+CmA0LXJtahsF0MC8H5bQUfzaULOx5oYoSIOFJkEfKMBq0kje7xKCZPlu60J\nA7WK0yahwQBwX1957qUC7mtVPWC6wEiQUOCvtSi63+bV4GpzYsECMD69ZmIoxIKa\nAWxmGFsd9qK5o4vq5/Rt+7qp0OK3RkaDxQIDAQABo1MwUTAdBgNVHQ4EFgQUKdWE\nOoupC7fCILeKVvYgoUbcOu8wHwYDVR0jBBgwFoAUKdWEOoupC7fCILeKVvYgoUbc\nOu8wDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAbbx+0Wwu68eM\nLvoeYExfVDmUdCjKPPcC/0f6m/BQqsxS9S1wPGajd7uB/cxADs/ZA+AKCp5gSWfa\nn30A1u5q2E7/IDIrLbUzlWAV2NZuTMBPyDIpTFKRJgiKcsQtyRIy1nsMC77YgZqZ\nKesvqRiyD56fdx/mN6A2GH8h/78qs6GIPAW8V0s9e6u0dsPRpF9Jt9jPlEYBxkDE\nWqyZ26BPmLtIoUxdCSWTw+WQ5v0ybruHCDqdmIf8M4edPtP9mo5vTRfGJCP231GM\nJp5wfDtstFwCFYAkYxgxkzOTDwNf3LRRGOCAEYRC5AuVpFO2L5tOphQBLQ+s1e1e\n85TKpTrZSw==\n-----END CERTIFICATE-----\n"}},"type":"object","title":"NGINXcfg"},"NGINXcfg-Output":{"properties":{"private_key":{"type":"string","title":"Private Key","description":"pem encoded private key","default":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCzOQHRxEkI9gtf\n5Snw2GSFqlJ8UFlBo0WCS9ty4Nthz77NW0lYj6WNH+LDEENN+mDzepQ1o4vERmGi\nxm1S5YVA7ulGwFcnlHz62MTkx/muN3/zq/Q0DS8veUoPfl3h66sO9boUlqZE9IHy\nUEPmox6Cav2fwbXJuExoqgcVofPTydJb2mz1TeBLte34KYDQtcm1qGwXQwLwfltB\nR/NpQs7HmhihIg4UmQR8owGrSSN7vEoJk+W7rQkDtYrTJqHBAHBfX3nupQLua1U9\nYLrASJBQ4K+1KLrf5tXganNiwQIwPr1mYijEgpoBbGYYWx32ormji+rn9G37uqnQ\n4rdGRoPFAgMBAAECggEAZEUOqYeBvQu7DWmu71qB0u6Zu4dQiJKKPv2lxz3aP3z1\nKPtbq7qiSrR+L9gXb7cXKuF3rhLUDXm7AlC1tV1IEi4YQUc2+6Pt0IIalkzzee7/\nHRslQ0HlFlBriQOQDufFClecRgyK9aU+Vo1lj9HPLfQh9ZFw3WzJAv2tfQLg4anm\ntR0BfzTDMgSk8uLLpcz+pwEgWG7Ij9dWO5d2B7ZYmobdt+e/CYbFRKCeWGQ8Wake\n6GH8nMs5uK/xLCQFgFLk4lYe6gnB/8/CDUVSNXZcqE3FvV6yDJrYD2jPAKb2air7\nvTyMyqVZK8wqR0N4f2VOGC3UuYcOUb4HHYXWGJ6FeQKBgQDeqnZUo19LIP9Ikuh4\n99ORuXdYKHbr3aDRFOQwZjfTcJ4ltG/fK/leJfGcG9gtpnPW8yF0BA3W6wML0r4f\nj4NUCsbmFixFNZ/DV8DP1YYoZ1yIBUWOhuE9ee1z81V7I0p/GG3y07JA01Q40Qut\n3hQNQ2FHsoCImHpj34KyvcnZUwKBgQDODZxLnzTReLBemhTKERkJqrpY8gdqbwqv\nOiHeajEH/CccDoxZNdv33TGl9Gj7UljotYDjz46d8LFr/wR5SC1h49SgoqoBZNT/\nGfOmFWMdkFNrtg5v+tCyCUmGJg3SiBBeB2gG6nkouzfYsHXMYJIKzZaO4cEzgpVn\nsl0EpEVThwKBgHH89eLSV+BQHh/7BQOYazi4p338CRUqOj+O4FpemcmmZ2+J9ZNc\nIaau6gcuwfZstfSeNsv7n1IcsUyGMEpb37FQaw4y36r2jrkj3VMITku0zkvb1wXl\nyrz8BDFNqr8FDAgQa4jaEvDYvs7vRXlWrRE1I0HfAanr1Qv3yiLSwdh9AoGBAJVZ\njCXL2a7SuZN4PwVPa0R0eOkrVHCy1522lwHtGmjdPUO6z8OBpFR+ARR2mPlA8KyL\nkkaNFKQp54+NoiJ+TFadmmpsPKkR+siEePOyoMq256A0rzY/J7FDxgTz5CTq9mIR\nIDeTEAqT2KC5Fkjy3ifyZ+RcgXridYRZ5c4NeypVAoGAWSOSFGy6e3dZulifepDV\nVheBj8G2qsvxS+QIPoCyaYzfBKmZF4EoAkSXReisGWMB5i3lqquCajNG+hzSB6cg\nOC68cUf5LZpwLt+CKYrtNAzD663+20XmX6iP6Zsl5JlFiuQzPKHPKJYFCUlE5E8D\nSaDau2y2mg095VxcC4mpTGM=\n-----END PRIVATE KEY-----\n"},"public_key":{"type":"string","title":"Public Key","description":"pem encoded public key/full chain","default":"-----BEGIN CERTIFICATE-----\nMIID8zCCAtugAwIBAgIUQIZK8OYPxWGlw45vKIz+PGQ3YngwDQYJKoZIhvcNAQEL\nBQAwgYgxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJXQTEQMA4GA1UEBwwHU2VhdHRs\nZTELMAkGA1UECgwCRjUxEDAOBgNVBAsMB3NvbWVndXkxGzAZBgNVBAMMEm1vbnBy\nb3h5LmxvY2FsaG9zdDEeMBwGCSqGSIb3DQEJARYPYi5pbWhvZmZAZjUuY29tMB4X\nDTIyMTIwOTE5NDUwNFoXDTIzMTIwOTE5NDUwNFowgYgxCzAJBgNVBAYTAlVTMQsw\nCQYDVQQIDAJXQTEQMA4GA1UEBwwHU2VhdHRsZTELMAkGA1UECgwCRjUxEDAOBgNV\nBAsMB3NvbWVndXkxGzAZBgNVBAMMEm1vbnByb3h5LmxvY2FsaG9zdDEeMBwGCSqG\nSIb3DQEJARYPYi5pbWhvZmZAZjUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\nMIIBCgKCAQEAszkB0cRJCPYLX+Up8NhkhapSfFBZQaNFgkvbcuDbYc++zVtJWI+l\njR/iwxBDTfpg83qUNaOLxEZhosZtUuWFQO7pRsBXJ5R8+tjE5Mf5rjd/86v0NA0v\nL3lKD35d4eurDvW6FJamRPSB8lBD5qMegmr9n8G1ybhMaKoHFaHz08nSW9ps9U3g\nS7Xt+CmA0LXJtahsF0MC8H5bQUfzaULOx5oYoSIOFJkEfKMBq0kje7xKCZPlu60J\nA7WK0yahwQBwX1957qUC7mtVPWC6wEiQUOCvtSi63+bV4GpzYsECMD69ZmIoxIKa\nAWxmGFsd9qK5o4vq5/Rt+7qp0OK3RkaDxQIDAQABo1MwUTAdBgNVHQ4EFgQUKdWE\nOoupC7fCILeKVvYgoUbcOu8wHwYDVR0jBBgwFoAUKdWEOoupC7fCILeKVvYgoUbc\nOu8wDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAbbx+0Wwu68eM\nLvoeYExfVDmUdCjKPPcC/0f6m/BQqsxS9S1wPGajd7uB/cxADs/ZA+AKCp5gSWfa\nn30A1u5q2E7/IDIrLbUzlWAV2NZuTMBPyDIpTFKRJgiKcsQtyRIy1nsMC77YgZqZ\nKesvqRiyD56fdx/mN6A2GH8h/78qs6GIPAW8V0s9e6u0dsPRpF9Jt9jPlEYBxkDE\nWqyZ26BPmLtIoUxdCSWTw+WQ5v0ybruHCDqdmIf8M4edPtP9mo5vTRfGJCP231GM\nJp5wfDtstFwCFYAkYxgxkzOTDwNf3LRRGOCAEYRC5AuVpFO2L5tOphQBLQ+s1e1e\n85TKpTrZSw==\n-----END CERTIFICATE-----\n"}},"type":"object","required":["private_key","public_key"],"title":"NGINXcfg"},"PasswordChange":{"properties":{"oldpassword":{"type":"string","title":"old password","default":"secret"},"newpassword":{"type":"string","title":"new, shiny password","default":"newsecret"}},"type":"object","title":"PasswordChange","description":"Password Change Model"},"StatusMsg":{"properties":{"status_id":{"type":"string","format":"uuid","title":"Status Id","description":"unique id"},"status":{"type":"string","title":"Status","description":"a short status, ie, broken, working","default":""},"detail":{"title":"Detail","description":"if available, it will be a dict representation of the object in question","default":""}},"type":"object","required":["status_id","status","detail"],"title":"StatusMsg"},"SystemCfg-Input":{"properties":{"version":{"type":"integer","title":"Version"},"privatekey":{"type":"string","title":"Privatekey","description":"key to decrypt monitor passwords.  If one isn't provided, we will make one.","default":""},"monitors":{"items":{"$ref":"#/components/schemas/MonitorCfg-Input"},"type":"array","title":"Monitors","description":"monitor related things"},"ldap":{"allOf":[{"$ref":"#/components/schemas/LDAPCfg-Input"}],"description":"ldap related things","default":{"basedn":"","domain":"","groups":[],"servers":[]}},"cluster":{"allOf":[{"$ref":"#/components/schemas/ClusterCfg-Input"}],"description":"cluster related things","default":{"local":"","password":"PASSWORD","peer":"","priority":0,"state":"NONE","virtualip":""}},"docker":{"items":{"$ref":"#/components/schemas/DockerCfg-Input"},"type":"array","title":"Docker","description":"docker related things"},"nginx":{"items":{"$ref":"#/components/schemas/NGINXcfg-Input"},"type":"array","title":"Nginx","description":"nginx related things"}},"type":"object","title":"SystemCfg"},"SystemCfg-Output":{"properties":{"version":{"type":"integer","title":"Version"},"privatekey":{"type":"string","title":"Privatekey","description":"key to decrypt monitor passwords.  If one isn't provided, we will make one.","default":""},"monitors":{"items":{"$ref":"#/components/schemas/MonitorCfg-Output"},"type":"array","title":"Monitors","description":"monitor related things"},"ldap":{"allOf":[{"$ref":"#/components/schemas/LDAPCfg-Output"}],"description":"ldap related things","default":{"basedn":"","domain":"","groups":[],"servers":[]}},"cluster":{"allOf":[{"$ref":"#/components/schemas/ClusterCfg-Output"}],"description":"cluster related things","default":{"local":"","password":"PASSWORD","peer":"","priority":0,"state":"NONE","virtualip":""}},"docker":{"items":{"$ref":"#/components/schemas/DockerCfg-Output"},"type":"array","title":"Docker","description":"docker related things"},"nginx":{"items":{"$ref":"#/components/schemas/NGINXcfg-Output"},"type":"array","title":"Nginx","description":"nginx related things"}},"type":"object","required":["version","privatekey","monitors","ldap","cluster","docker","nginx"],"title":"SystemCfg"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"user/token"}}}}},"tags":[{"name":"Monitor Status","description":"Point your BIGIP monitors to here. /api/status is for the bigip.  /api/status/details is for you."},{"name":"Monitor Configs","description":"Manage the monitor configurations here.  Create and delete.  If you want to update, delete then create a new one with the same name.  I don't love it, but for now it is so."},{"name":"User","description":"Login things.  A person could change the local admin password here."},{"name":"System Configuration","description":"Configuration that affect the overall system.  Configuration import/export, LDAP and cluster configurations affect the system. NGINX and Docker currently do not."},{"name":"Config Sync","description":"Routes for config sync operation.  You shouldn't use these as they may change unexpectedly"}]}